<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
				   	xmlns:s="library://ns.adobe.com/flex/spark" 
				   	xmlns:mx="library://ns.adobe.com/flex/mx" 
					xmlns:detail="org.openforis.collect.ui.component.detail.*"
					creationComplete="creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import mx.collections.IList;
			import mx.events.FlexEvent;
			
			import org.openforis.collect.metamodel.proxy.EntityDefinitionProxy;
			import org.openforis.collect.metamodel.proxy.ModelVersionProxy;
			import org.openforis.collect.model.proxy.EntityProxy;
			import org.openforis.collect.presenter.InnerFormPresenter;
			import org.openforis.collect.util.UIUtil;
			
			private var _entityDefinition:EntityDefinitionProxy;
			private var _modelVersion:ModelVersionProxy;
			private var _nodeDefinitions:IList;
			private var _parentEntity:EntityProxy;
			private var _occupyAllAvailableSpace:Boolean;
			
			public static const STATE_DEFAULT:String = "default";
			public static const STATE_ENLARGED:String = "enlarged";
			
			private var _presenter:InnerFormPresenter;
			
			protected function creationCompleteHandler(event:FlexEvent):void {
				_presenter = new InnerFormPresenter(this);
				_presenter.init();
			}
			
			public function resetScrollBars():void {
				if(scroller != null) {
					UIUtil.resetScrollBars(scroller);
				}
			}
			
			[Bindable]
			public function get entityDefinition():EntityDefinitionProxy {
				return _entityDefinition;
			}

			public function set entityDefinition(value:EntityDefinitionProxy):void {
				_entityDefinition = value;
			}

			[Bindable]
			public function get modelVersion():ModelVersionProxy {
				return _modelVersion;
			}
			
			public function set modelVersion(value:ModelVersionProxy):void {
				_modelVersion = value;
			}
			
			[Bindable]
			public function get nodeDefinitions():IList {
				return _nodeDefinitions;
			}
			
			public function set nodeDefinitions(value:IList):void {
				_nodeDefinitions = value;
			}
			
			[Bindable]
			public function get parentEntity():EntityProxy {
				return _parentEntity;
			}
			
			public function set parentEntity(value:EntityProxy):void {
				_parentEntity = value;
			}
			
			[Bindable]
			public function get occupyAllAvailableSpace():Boolean {
				return _occupyAllAvailableSpace;
			}
			
			public function set occupyAllAvailableSpace(value:Boolean):void {
				_occupyAllAvailableSpace = value;
			}
			
		]]>
	</fx:Script>
 	
	<s:states>
		<s:State name="default" />
		<s:State name="enlarged" />
	</s:states>
	
	<s:Scroller id="scroller"
				width.default="100%"
				height.default="100%"
				horizontalScrollPolicy.enlarged="off"
				verticalScrollPolicy.enlarged="off">
		<s:Group>
			<mx:Grid id="grid"
					 paddingBottom="10" 
					 paddingLeft="10" 
					 paddingRight="10"
					 paddingTop="10"
					 paddingBottom.enlarged="0" 
					 paddingLeft.enlarged="0" 
					 paddingRight.enlarged="0" 
					 paddingTop.enlarged="0"
					 width="{occupyAllAvailableSpace ? width: NaN}"
					 height="{occupyAllAvailableSpace ? height: NaN}"
					 >
				<!-- to be built programmatically -->
			</mx:Grid>
		</s:Group>
	</s:Scroller>
	
</s:NavigatorContent>