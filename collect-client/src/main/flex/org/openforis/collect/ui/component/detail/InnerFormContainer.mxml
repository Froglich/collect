<?xml version="1.0" encoding="utf-8"?>
<s:HGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
				   	xmlns:s="library://ns.adobe.com/flex/spark" 
				   	xmlns:mx="library://ns.adobe.com/flex/mx" 
					xmlns:detail="org.openforis.collect.ui.component.detail.*"
					creationComplete="creationCompleteHandler(event)"
					>
	<fx:Script>
		<![CDATA[
			import mx.collections.IList;
			import mx.events.FlexEvent;
			
			import org.openforis.collect.metamodel.proxy.EntityDefinitionProxy;
			import org.openforis.collect.metamodel.proxy.ModelVersionProxy;
			import org.openforis.collect.model.proxy.EntityProxy;
			import org.openforis.collect.presenter.InnerFormPresenter;
			import org.openforis.collect.util.UIUtil;
			
			private var _entityDefinition:EntityDefinitionProxy;
			private var _modelVersion:ModelVersionProxy;
			private var _nodeDefinitions:IList;
			private var _parentEntity:EntityProxy;
			/**
			 * If true, this component needs to be rendered inside a Scroller managed outside of it
			 */
			private var _useScroller:Boolean;
			
			public static const STATE_DEFAULT:String = "default";
			public static const STATE_USE_SCROLLER:String = "useScroller";
			
			private var _presenter:InnerFormPresenter;
			
			protected function creationCompleteHandler(event:FlexEvent):void {
				_presenter = new InnerFormPresenter(this);
				_presenter.init();
			}
			
			public function resetScrollBars():void {
				if(scroller != null) {
					UIUtil.resetScrollBars(scroller);
				}
			}
			
			[Bindable]
			public function get entityDefinition():EntityDefinitionProxy {
				return _entityDefinition;
			}

			public function set entityDefinition(value:EntityDefinitionProxy):void {
				_entityDefinition = value;
			}

			[Bindable]
			public function get modelVersion():ModelVersionProxy {
				return _modelVersion;
			}
			
			public function set modelVersion(value:ModelVersionProxy):void {
				_modelVersion = value;
			}
			
			[Bindable]
			public function get nodeDefinitions():IList {
				return _nodeDefinitions;
			}
			
			public function set nodeDefinitions(value:IList):void {
				_nodeDefinitions = value;
			}
			
			[Bindable]
			public function get parentEntity():EntityProxy {
				return _parentEntity;
			}
			
			public function set parentEntity(value:EntityProxy):void {
				_parentEntity = value;
			}
			
			[Bindable(event="useScrollerChange")]
			public function get useScroller():Boolean {
				return _useScroller;
			}
			
			public function set useScroller(value:Boolean):void {
				_useScroller = value;
				dispatchEvent(new Event("useScrollerChange"));
			}
			
			[Bindable(event="useScrollerChange")]
			public function get notUsingScroller():Boolean {
				return ! useScroller;
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- to be built programmatically -->
		<mx:Grid id="grid"
				 width.default="100%"
				 height.default="100%"
				 horizontalGap="4"
				 verticalGap="2"
				 paddingBottom.default="0"
				 paddingLeft.default="0"
				 paddingRight.default="0"
				 paddingTop.default="0"
				 paddingBottom.useScroller="10"
				 paddingLeft.useScroller="10"
				 paddingRight.useScroller="10"
				 paddingTop.useScroller="10"
				 />
	</fx:Declarations>
	
	
	<s:states>
		<s:State name="default" />
		<s:State name="useScroller" />
	</s:states>
	
	<s:Scroller id="scroller"
				includeIn="useScroller"
				width="100%"
				height="100%">
		<s:Group id="scrollerContent" />
	</s:Scroller>
	
</s:HGroup>
