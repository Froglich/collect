<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
				 xmlns:s="library://ns.adobe.com/flex/spark" 
				 xmlns:mx="library://ns.adobe.com/flex/mx"
				 xmlns:component="org.openforis.collect.ui.component.*"
				 xmlns:container="org.openforis.collect.ui.container.*" 
				 xmlns:detail="org.openforis.collect.ui.component.detail.*" 
				 xmlns:input="org.openforis.collect.ui.component.input.*"
				 xmlns:layout="org.openforis.collect.ui.layout.*"
				 creationComplete="creationCompleteHandler(event)"
				 >
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import org.openforis.collect.i18n.Message;
			import org.openforis.collect.model.SurveySummary;
			import org.openforis.collect.presenter.BackupViewPresenter;
			
			public static const STATE_LOADING:String = "loading";
			public static const STATE_PARAMETERS_SELECTION:String = "parametersSelection";
			public static const STATE_EXPORTING:String = "exporting";
			public static const STATE_COMPLETE:String = "complete";
			
			private var _presenter:BackupViewPresenter;

			protected function creationCompleteHandler(event:FlexEvent):void {
				_presenter = new BackupViewPresenter(this);
				_presenter.init();
			}
			
			protected function surveyLabelFunction(survey:SurveySummary):String {
				return survey.name;
			}
			
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="loading" />
		<s:State name="parametersSelection" />
		<s:State name="exporting" />
		<s:State name="complete" />
	</s:states>
	
	<s:Group includeIn="loading"
			 width="100%" height="100%">
		<component:LoadingContent />
	</s:Group>
	
	<s:VGroup includeIn="parametersSelection"
			  itemCreationPolicy="immediate"
			  horizontalAlign="center"
			  width="100%" height="100%"
			  gap="30"
			  >
		
		<s:VGroup id="parametersSelectionContainer"
				  horizontalAlign="center"
				  width="100%" height="100%"
				  gap="15"
				  visible="false" includeInLayout="false"
				  visible.parametersSelection="true" includeInLayout.parametersSelection="true"
				  >
			<s:HGroup verticalAlign="middle">
				<s:Label text="{Message.get('backup.selectSurveyLabel')}"
						 styleName="formLabel"/>
				<s:DropDownList id="surveyDropDown" 
								labelFunction="surveyLabelFunction" 
								prompt="{Message.get('global.dropDownPrompt')}"
								width="150"
								/>
			</s:HGroup>
			
		</s:VGroup>
		
		<s:HGroup horizontalAlign="center" width="100%" gap="40">
			<s:Button id="exportButton"
					  visible="false" visible.parametersSelection="true"
					  includeInLayout="false" includeInLayout.parametersSelection="true"
					  label="{Message.get('backup.backupButtonLabel')}"
					  useHandCursor="true" 
					  buttonMode="true"
					  />
			
		</s:HGroup>
	</s:VGroup>
	
	<s:VGroup includeIn="exporting" 
			  itemCreationPolicy="immediate"
			  width="100%" height="100%"
			  horizontalAlign="center"
			  verticalAlign="middle"
			  gap="30">
		
		<mx:ProgressBar id="progressBar"
						horizontalCenter="0"
						verticalCenter="0"
						mode="manual"
						label="%3%"
						labelPlacement="center"
						width="80%"
						/>
		
		<s:Label id="progressLabel" />
		
		<s:Button id="cancelExportButton"
				  label="{Message.get('global.cancel')}"
				  useHandCursor="true" 
				  buttonMode="true"
				  />
	</s:VGroup>
	
	<s:VGroup includeIn="complete" itemCreationPolicy="immediate"
			  height="100%" width="100%"
			  horizontalAlign="center"
			  verticalAlign="middle"
			  gap="20"
			  >
		<s:Label text="{Message.get('backup.complete')}"
				 styleName="infoMessageBig"
				 />
		
		<s:HGroup gap="30">
			<s:Button id="downloadButton" 
					  label="{Message.get('global.download')}"
					  useHandCursor="true" 
					  buttonMode="true"
					  />
		</s:HGroup>
	</s:VGroup>
	
</s:VGroup>
