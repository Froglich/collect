<?xml version="1.0" encoding="utf-8"?>
<component:PopUp xmlns:fx="http://ns.adobe.com/mxml/2009" 
				 xmlns:s="library://ns.adobe.com/flex/spark" 
				 xmlns:mx="library://ns.adobe.com/flex/mx"
				 xmlns:component="org.openforis.collect.ui.component.*"
				 width="600" height="400"
				 title="{Message.get('home.configuration')}"
				 currentState="loading"
				 >
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			import mx.rpc.AsyncResponder;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import org.openforis.collect.client.ClientFactory;
			import org.openforis.collect.i18n.Message;
			import org.openforis.collect.model.LogoPosition;
			import org.openforis.collect.model.proxy.ConfigurationProxy;
			import org.openforis.collect.ui.Images;
			import org.openforis.collect.util.AlertUtil;
			
			import spark.events.TextOperationEvent;
			
			/* private var _presenter:SurveySelectionPresenter; */
			
			override protected function creationCompleteHandler(event:FlexEvent):void {
				super.creationCompleteHandler(event);
				
				ClientFactory.configurationClient.loadConfiguration(new AsyncResponder(loadConfigurationSuccessHandler, loadConfigurationFaultHandler));
			}
			
			private function loadConfigurationSuccessHandler(event:ResultEvent, token:Object = null):void {
				currentState = "loadComplete";

				uploadPathTextInput.addEventListener(FlexEvent.VALUE_COMMIT, uploadPathChangeHandler);
				recordIndexPathTextInput.addEventListener(FlexEvent.VALUE_COMMIT, recordIndexPathChangeHandler);

				var conf:ConfigurationProxy = event.result as ConfigurationProxy;
				//custom paths
				uploadPathTextInput.text = conf.uploadPath;
				recordIndexPathTextInput.text = conf.indexPath;
				//default paths
				defaultUploadPathTextInput.text = conf.defaultUploadPath;
				defaultRecordIndexPathTextInput.text = conf.defaultIndexPath;
			}
			
			private function loadConfigurationFaultHandler(event:FaultEvent, token:Object = null):void {
				AlertUtil.showError("configuration.load.error", [event.fault.message]);
			}
			
			protected function uploadPathChangeHandler(event:FlexEvent):void {
				uploadPathTextInput.enabled = false;

				ClientFactory.configurationClient.updateUploadPath(new AsyncResponder(
					function(event:ResultEvent, token:Object = null):void {
						//ok
						uploadPathTextInput.enabled = true;
					}, function(event:FaultEvent, token:Object = null):void {
						//TODO fault handler
						uploadPathTextInput.enabled = true;
					}), uploadPathTextInput.text);
			}
			
			protected function recordIndexPathChangeHandler(event:FlexEvent):void {
				recordIndexPathTextInput.enabled = false;
				
				ClientFactory.configurationClient.updateIndexPath(new AsyncResponder(
					function(event:ResultEvent, token:Object = null):void {
						//ok
						recordIndexPathTextInput.enabled = true;
					}, function(event:FaultEvent, token:Object = null):void {
						//TODO fault handler
						recordIndexPathTextInput.enabled = true;
					}), recordIndexPathTextInput.text);
			}
			
		]]>
	</fx:Script>
	
	<component:layout>
		<s:BasicLayout />
	</component:layout>

	<component:states>
		<s:State name="loading" />
		<s:State name="loadComplete" />
	</component:states>
	
	<component:LoadingContent includeIn="loading" />
	
	<s:Scroller width="100%" height="100%" includeIn="loadComplete" itemCreationPolicy="immediate">
		
		<s:VGroup horizontalCenter="0" horizontalAlign="center" gap="30">
			<s:Form>
				<s:FormItem label="{Message.get('configuration.uploadPath')}">
					<s:VGroup>
						<s:TextInput id="uploadPathTextInput" width="230" />
						<s:HGroup verticalAlign="middle">
							<s:Label text="{Message.get('global.default')}:" />
							<s:TextInput id="defaultUploadPathTextInput" width="200" editable="false" />
						</s:HGroup>
					</s:VGroup>
				</s:FormItem>
				<s:FormItem label="{Message.get('configuration.recordIndexPath')}">
					<s:VGroup>
						<s:TextInput id="recordIndexPathTextInput" width="230" />
						<s:HGroup verticalAlign="middle">
							<s:Label text="{Message.get('global.default')}:" />
							<s:TextInput id="defaultRecordIndexPathTextInput" width="200" editable="false" />
						</s:HGroup>
					</s:VGroup>
				</s:FormItem>
				<s:FormItem label="{Message.get('configuration.logo.header')}">
					<component:CustomLogoConfigurationElement 
						defaultImage="{Images.HEADER}"
						position="{LogoPosition.HEADER}" />
				</s:FormItem>
				<s:FormItem label="{Message.get('configuration.logo.topRight')}">
					<component:CustomLogoConfigurationElement 
						defaultImage="{Images.TOP_RIGHT_DEFAULT_LOGO}"
						position="{LogoPosition.TOP_RIGHT}" />
				</s:FormItem>
				<s:FormItem label="{Message.get('configuration.logo.footer')}">
					<component:CustomLogoConfigurationElement 
						defaultImage="{Images.FOOTER}"
						position="{LogoPosition.FOOTER}" />
				</s:FormItem>
			</s:Form>
		</s:VGroup>
		
	</s:Scroller>

</component:PopUp>
