<?xml version="1.0" encoding="utf-8"?>
<view:AbstractReferenceDataImportView xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:component="org.openforis.collect.ui.component.*"
		 xmlns:datagrid="org.openforis.collect.ui.component.datagrid.*"
		 xmlns:view="org.openforis.collect.ui.view.*"
		 skinClass="org.openforis.collect.ui.skin.SamplingDesignImportViewSkin"
		 creationComplete="creationCompleteHandler(event)"
		 >

	<fx:Script>
		<![CDATA[
			import mx.collections.IList;
			import mx.events.FlexEvent;
			
			import org.openforis.collect.metamodel.proxy.SpatialReferenceSystemProxy;
			import org.openforis.collect.model.proxy.SamplingDesignItemProxy;
			import org.openforis.collect.presenter.SamplingDesignImportPresenter;
			
			import spark.components.Button;
			import spark.components.gridClasses.GridColumn;
			
			private var _presenter:SamplingDesignImportPresenter;
			private var _spatialReferenceSystems:IList;
			
			[SkinPart(required="true", type="spark.components.Button")]
			public var downloadExampleButton:Button;
			
			protected function creationCompleteHandler(event:FlexEvent):void {
				_presenter = new SamplingDesignImportPresenter(this);
			}
			
			public function levelLabelFunction(item:SamplingDesignItemProxy, column:GridColumn):String {
				var dataField:String = column.dataField;
				var parts:Array = dataField.split("_");
				var levelPosString:String = parts[1];
				var levelPosition:int = int(levelPosString);
				if ( levelPosition <= item.levelCodes.length ) {
					var result:Object = item.levelCodes.getItemAt(levelPosition - 1);
					return String(result);
				} else {
					return "";
				}
			}

			public function srsLabelFunction(item:SpatialReferenceSystemProxy):String {
				//TODO use label
				return item.id;
			}
			
			public function samplingDesignSrsLabelFunction(item:SamplingDesignItemProxy, column:GridColumn = null):String {
				return item.srsId;
			}
			
			[Bindable]
			public function get spatialReferenceSystems():IList {
				return _spatialReferenceSystems;
			}
			
			public function set spatialReferenceSystems(value:IList):void {
				_spatialReferenceSystems = value;
			}
			
		]]>
	</fx:Script>
	
</view:AbstractReferenceDataImportView>
