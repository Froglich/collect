<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 initialize="initializeHandler(event)">
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import org.openforis.collect.event.ImageLoaderEvent;
			import org.openforis.collect.i18n.Message;
			
			private static const STATE_LOADING:String = "loading";
			private static const STATE_ERROR:String = "error";
			private static const STATE_LOAD_COMPLETE:String = "loadComplete";
			
			private var _initialized:Boolean = false;
			[Bindable]
			private var _loader:Loader;
			
			protected function initializeHandler(event:FlexEvent):void {
				if(!_initialized)
					init();
			}
			
			private function init():void {
				_initialized = true;
				_loader = new Loader();
				_loader.contentLoaderInfo.addEventListener(Event.COMPLETE, completeHandler);
				_loader.contentLoaderInfo.addEventListener(ProgressEvent.PROGRESS, progressHandler);
				_loader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
			}
			
			public function load(value:URLRequest):void {
				this.currentState = STATE_LOADING;
				if(!_initialized)
					init();
				_loader.load(value);
			}
			
			protected function completeHandler(event:Event):void {
				this.currentState = STATE_LOAD_COMPLETE;
				image.source = _loader.content;
			}
			
			protected function ioErrorHandler(event:IOErrorEvent):void {
				this.currentState = STATE_ERROR;
			}

			protected function imageClickHandler(event:Event):void {
				dispatchEvent(new ImageLoaderEvent(ImageLoaderEvent.IMAGE_CLICK));
			}
			
			protected function progressHandler(event:ProgressEvent):void {
				progressBar.setProgress(event.bytesLoaded, event.bytesTotal);
			}

		]]>
	</fx:Script>
	
	<fx:Metadata>
		[Event(name="imageClick", type="org.openforis.collect.event.ImageLoaderEvent")]
	</fx:Metadata>
	
	<s:states>
		<s:State name="default" />
		<s:State name="loading" />
		<s:State name="loadComplete" />
		<s:State name="error" />
	</s:states>
	
	<s:Image id="image" 
			 maxWidth="{this.maxWidth}" maxHeight="{this.maxHeight}" 
			 includeIn="loadComplete"
			 itemCreationPolicy="immediate"
			 click="imageClickHandler(event)"
			 buttonMode="true" 
			 toolTip="{Message.get('imageLoader.clickToDownload')}" />
	
	<mx:ProgressBar id="progressBar" 
					includeIn="loading"
					itemCreationPolicy="immediate"
					width="100%" mode="manual" />
	
	<s:Label includeIn="error" 
			 itemCreationPolicy="immediate"
			 text="{Message.get('imageLoader.error.imageNotFound')}" 
			 width="100%" />
	
	
</s:Group>
