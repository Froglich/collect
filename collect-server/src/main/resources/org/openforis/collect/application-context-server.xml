<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd"
	default-lazy-init="true"
	default-autowire="byName">
	
	<import resource="classpath:org/openforis/collect/application-context-core.xml"/>
	
	<!-- Override scope for Collect core sessionRecordFileManager bean, use "session" scope -->
	<bean id="sessionRecordFileManager" class="org.openforis.collect.manager.SessionRecordFileManager" 
		init-method="init" />
	
	<!-- RDB -->
	<bean id="rdbPublisher" class="org.openforis.collect.relational.CollectRDBPublisher" />
	
	<bean id="volatileRecordIndexManager"
		class="org.openforis.collect.remoting.service.recordindex.VolatileRecordIndexManager"
		init-method="init" scope="session" lazy-init="false" autowire="byName" />
	
	<bean id="sessionManager" class="org.openforis.collect.manager.SessionManager"
		scope="session" />
	
	<!-- ===================================== -->
	<!-- GraniteDs services -->
	<!-- ===================================== -->
	<bean id="codeListSessionService"
		class="org.openforis.collect.remoting.service.CodeListSessionService"
		scope="session" />
	<bean id="codeListImportService"
		class="org.openforis.collect.remoting.service.CodeListImportService"
		autowire="byName" init-method="init" />
	<bean id="configurationService"
		class="org.openforis.collect.remoting.service.ConfigurationService"
		autowire="byName" init-method="init" />
	<bean id="csvDataImportService"
		class="org.openforis.collect.remoting.service.CSVDataImportService"
		autowire="byName" init-method="init" scope="session" />
	<bean id="dataService" class="org.openforis.collect.remoting.service.DataService"
		autowire="byName" scope="session" />
	<bean id="dataExportService"
		class="org.openforis.collect.remoting.service.DataExportService"
		autowire="byName" scope="session" />
	<bean id="dataImportService"
		class="org.openforis.collect.remoting.service.DataImportService"
		autowire="byName" scope="session" />
	<bean id="logoService" class="org.openforis.collect.remoting.service.LogoService"
		autowire="byName" />
	<bean id="modelService" class="org.openforis.collect.remoting.service.ModelService"
		autowire="byName" />
	<bean id="recordIndexService"
		class="org.openforis.collect.remoting.service.recordindex.RecordIndexService"
		autowire="byName" scope="session" />
	<bean id="samplingDesignService"
		class="org.openforis.collect.remoting.service.SamplingDesignService"
		autowire="byName" />
	<bean id="samplingDesignImportService"
		class="org.openforis.collect.remoting.service.SamplingDesignImportService"
		autowire="byName" init-method="init" />
	<bean id="sessionService" class="org.openforis.collect.remoting.service.SessionService"
		autowire="byName" />
	<bean id="speciesService" class="org.openforis.collect.remoting.service.SpeciesService"
		autowire="byName" />
	<bean id="speciesImportService"
		class="org.openforis.collect.remoting.service.SpeciesImportService"
		autowire="byName" init-method="init" />
	<bean id="userService" class="org.openforis.collect.remoting.service.UserService"
		autowire="byName" />
	<bean id="userSessionService" class="org.openforis.collect.remoting.service.UserSessionService"
		autowire="byName" scope="session" />
		
<!-- 	<bean id="dataRestoreService" class="org.openforis.collect.remoting.service.io.data.restore.DataRestoreServiceImpl" /> -->
	
<!-- 	<bean class="org.springframework.remoting.rmi.RmiServiceExporter"> -->
<!-- 		<property name="serviceName" value="dataRestoreService" /> -->
<!-- 		<property name="service" ref="dataRestoreService" /> -->
<!-- 		<property name="serviceInterface" value="org.openforis.collect.remoting.service.io.data.restore.RestoreService"/> -->
<!-- 		<property name="registryPort" value="1099" /> -->
<!-- 	</bean> -->
		
	<!-- ===================================== -->
	<!-- Security -->
	<!-- ===================================== -->
	<bean id="userDetailsService"	class="org.openforis.collect.security.CollectUserDetailsService" />
	
	<bean id="relationalDBGenerator" class="org.openforis.collect.relational.CollectRDBGenerator" 
		lazy-init="false">
		<constructor-arg ref="surveyManager" />
		<constructor-arg ref="recordManager" />
		<constructor-arg ref="collectLocalRDBStorageManager" />
	</bean>
	
	<bean id="eventQueue" class="org.openforis.collect.event.EventBrokerEventQueue">
		<constructor-arg>
			<bean class="org.fao.foris.simpleeventbroker.SpringEventBroker" 
					init-method="start" destroy-method="shutdown">
				<constructor-arg value="recordEventQueue" />
				<constructor-arg ref="dataSource" />
				<constructor-arg>
					<list>
						<bean class="org.openforis.collect.event.RDBGenerationRecordEventHandler">
							<constructor-arg ref="relationalDBGenerator" />
						</bean>
					</list>
				</constructor-arg>
				<property name="tableNamePrefix" value="ofc_" />
			</bean>
		</constructor-arg>
	</bean>
	
	<bean id="rdbMonitor" class="org.openforis.collect.relational.CollectRDBMonitor">
		<constructor-arg ref="eventQueue" />
		<constructor-arg ref="surveyManager" />
		<constructor-arg ref="collectLocalRDBStorageManager" />
	</bean>
	
	<bean id="sessionEventDispatcher" class="org.openforis.collect.manager.SessionEventDispatcher"
		scope="session">
		<constructor-arg ref="eventQueue" />
	</bean>

	<bean id="recordEventBatchPublisher" class="org.openforis.collect.io.data.RecordEventBatchPublisher"
		scope="prototype">
		<constructor-arg ref="eventQueue" />
	</bean>
	
</beans>
